apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS cinema;
    CREATE DATABASE IF NOT EXISTS user;
    CREATE DATABASE IF NOT EXISTS movie;
    CREATE DATABASE IF NOT EXISTS ticket;
    DROP USER IF EXISTS cinema;
    DROP USER IF EXISTS user;
    DROP USER IF EXISTS movie;
    DROP USER IF EXISTS ticket;
    CREATE USER 'cinema'@'%' IDENTIFIED BY 'cinema';
    CREATE USER 'user'@'%' IDENTIFIED BY 'user';
    CREATE USER 'movie'@'%' IDENTIFIED BY 'movie';
    CREATE USER 'ticket'@'%' IDENTIFIED BY 'ticket';
    GRANT ALL PRIVILEGES ON cinema.* TO 'cinema'@'%';
    GRANT ALL PRIVILEGES ON user.* TO 'user'@'%';
    GRANT ALL PRIVILEGES ON movie.* TO 'movie'@'%';
    GRANT ALL PRIVILEGES ON ticket.* TO 'ticket'@'%';
    FLUSH PRIVILEGES;

---

# MySQL Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: cinema
        - name: MYSQL_USER
          value: cinema
        - name: MYSQL_PASSWORD
          value: cinema
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-initdb-config
          mountPath: /docker-entrypoint-initdb.d   # Mount point for initialization scripts
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-initdb-config
        configMap:
          name: mysql-initdb-config
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---

# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  clusterIP: None 
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql

